@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product Management</title>
    <link href="https://unpkg.com/tabulator-tables@5.5.2/dist/css/tabulator.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://unpkg.com/tabulator-tables@5.5.2/dist/js/tabulator.min.js"></script>
    <style>
        * {
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
        }

        .nav {
            margin-bottom: 2rem;
            height: 4rem;
            width: 100%;
            background-color: #070f26;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
            color: white;
        }

        .logo-section {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .nav-logo img {
            height: 40px;
            margin-right: 10px;
        }

        .nav-menu {
            display: flex;
            align-items: center;
        }

            .nav-menu a {
                color: white;
                text-decoration: none;
                margin-left: 20px;
                font-size: 1rem;
                transition: color 0.3s ease;
            }

                .nav-menu a:hover {
                    color: #e0e0e0;
                }

        .nav-actions {
            display: flex;
            align-items: center;
        }

            .nav-actions button {
                background-color: white;
                color: #070f26;
                border: none;
                padding: 8px 16px;
                margin-left: 10px;
                border-radius: 4px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                .nav-actions button:hover {
                    background-color: #f0f0f0;
                }

        body {
            background-color: #f5f5f5;
            margin: 0;
        }

        .tabulator {
            position: relative;
            border: 1px solid #999;
            background-color: #888;
            margin: 2rem;
            font-size: 14px;
            text-align: left;
            border-radius: 10px;
            overflow: hidden;
            -webkit-transform: translateZ(0);
            -moz-transform: translateZ(0);
            -ms-transform: translateZ(0);
            -o-transform: translateZ(0);
            transform: translateZ(0);
        }

            /* Tabulator Header Styling */
            .tabulator .tabulator-header {
                background-color: #f0f2f5 !important;
                border-bottom: 1px solid #e6e8eb !important;
            }

                .tabulator .tabulator-header .tabulator-col {
                    background-color: transparent !important;
                    color: rgba(0, 0, 0, 0.85) !important;
                    font-weight: 600 !important;
                    border-right: none !important;
                    padding: 12px 15px !important;
                }

                    .tabulator .tabulator-header .tabulator-col .tabulator-col-content {
                        text-transform: uppercase;
                        font-size: 12px;
                        letter-spacing: 0.5px;
                    }

            /* Row Styling */
            .tabulator .tabulator-row {
                border-bottom: 1px solid #f0f0f0 !important;
            }

                .tabulator .tabulator-row .tabulator-cell {
                    padding: 12px 15px !important;
                }

        /* Status Pill Styling */
        .status-pill {
            padding: 2px 8px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            display: inline-block;
        }

        .status-pending {
            background-color: #fffbe6;
            color: #faad14;
            border: 1px solid #faad14;
        }

        .status-active {
            background-color: #f6ffed;
            color: #52c41a;
            border: 1px solid #52c41a;
        }

        .status-inactive {
            background-color: #fff2f0;
            color: #ff4d4f;
            border: 1px solid #ff4d4f;
        }

        .status-on-sale {
            background-color: #e6f7ff;
            color: #1890ff;
            border: 1px solid #1890ff;
        }

        .status-bouncing {
            background-color: #f5f5f5;
            color: #722ed1;
            border: 1px solid #722ed1;
        }

        /* Pagination Styling */
        .tabulator-pagination {
            background-color: white !important;
            border-top: 1px solid #f0f0f0 !important;
            padding: 12px 15px !important;
        }

        /* Product Name Cell Styling */
        .product-cell {
            display: flex;
            align-items: center;
        }

        .product-image {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            margin-right: 10px;
        }

        /* More Actions Button */
        .more-actions {
            background: none;
            border: none;
            color: rgba(0, 0, 0, 0.45);
            cursor: pointer;
            padding: 4px 8px;
        }

        .sub-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 32px 0 36px;
            background-color: #f4f4f4;
        }

            .sub-container h2 {
                margin: 0;
                font-size: 1.25rem;
                color: #333;
            }

        .add-product-btn {
            background-color: #070f26;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            display: flex;
            align-items: center;
            font-size: medium;
        }

            .add-product-btn:hover {
                background-color: #070f26;
            }

        @@media (max-width: 600px) {
            .sub-container

        {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        }

        /* Popover container */
        .popover {
            width: 500px;
            position: absolute;
            top: 20%;
            left: 50%;
            transform: translate(-50%, 0);
            display: none;
            background-color: white;
            border-radius: 12px;
            box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.2);
            padding: 24px;
            z-index: 10;
            transition: all 0.3s ease-in-out;
            max-height: 700px;
            overflow-y: auto;
        }

        /* Title */
        .popover-title {
            font-size: 20px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
            color: #333;
        }

        /* Form grid layout */
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 16px;
            margin-bottom: 20px;
        }

        /* Input group with floating labels */
        .input-group {
            position: relative;
            display: flex;
            flex-direction: column;
        }

            .input-group input {
                width: 100%;
                padding: 12px 10px;
                border: 2px solid #d1d5db;
                border-radius: 6px;
                font-size: 16px;
                background: transparent;
                outline: none;
                transition: border 0.3s ease;
            }

                .input-group input:focus {
                    border-color: #3b82f6;
                }

            .input-group label {
                position: absolute;
                top: 50%;
                left: 10px;
                transform: translateY(-50%);
                font-size: 14px;
                color: #777;
                transition: 0.3s ease-in-out;
                pointer-events: none;
            }

            /* Move label up when input is focused */
            .input-group input:focus + label,
            .input-group input:not(:placeholder-shown) + label {
                top: -1px;
                font-size: 12px;
                color: #3b82f6;
                background: white;
                padding: 0 4px;
            }

        /* Multi-select dropdown */
        .multi-select {
            position: relative;
            background: white;
            border: 2px solid #d1d5db;
            border-radius: 6px;
            padding: 12px;
            margin-bottom: 16px;
            cursor: pointer;
            transition: border-color 0.3s ease;
        }

            .multi-select:hover {
                border-color: #3b82f6;
            }

        /* Selected tags */
        .selected-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            align-items: center;
            padding: 5px;
            max-height: 70px;
            overflow-y: auto;
        }

        /* Placeholder text */
        .placeholder {
            color: #888;
            font-size: 14px;
        }

        /* Dropdown styles */
        .dropdown {
            border-top: 1px solid #ddd;
            display: none;
            max-height: 200px;
            overflow-y: auto;
            position: absolute;
            width: 100%;
            background: white;
            z-index: 10;
            border-radius: 6px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }

            .dropdown div {
                padding: 12px;
                cursor: pointer;
                font-size: 14px;
                color: #333;
                transition: background 0.3s;
            }

                .dropdown div:hover {
                    background: #f3f4f6;
                }

        /* Button */
        .button {
            width: 100%;
            padding: 14px;
            background-color: #3b82f6;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .button:hover {
                background-color: #2563eb;
                transform: translateY(-2px);
            }

        /* Close icon */
        .close-icon {
            position: absolute;
            top: 12px;
            right: 16px;
            font-size: 22px;
            cursor: pointer;
            color: #333;
            transition: color 0.2s ease;
        }

            .close-icon:hover {
                color: #e11d48;
            }

        .selected-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            align-items: center;
            flex-grow: 1;
        }

            .selected-tags input {
                border: none;
                outline: none;
                flex-grow: 1;
                font-size: 14px;
            }

        .tag {
            background: #007bff;
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 14px;
            display: flex;
            align-items: center;
        }

            .tag button {
                background: transparent;
                border: none;
                color: white;
                cursor: pointer;
                margin-left: 5px;
            }
    </style>
</head>

<body>
    <div class="nav">
        <div class="nav-logo">
            <h2 style="font-family: Glory;display: flex;background-color: #070f26;align-items:center;margin: 0px;color: white;">
                <img src="/base/img/nttdata_logo_.png"
                     style="margin-right: 10px;;width: 140px;padding: 10px;">
                <span>Intelligent Planner (User Management)</span>
            </h2>
        </div>
        <div id="overlay" class="overlay"></div>

        <div class="nav-actions">
            <div class="top-right-menu" style="
            position: absolute;
            top: 5px;
            right: 8px;
           display:flex;
       align-items: center;
       justify-content: center;">
                <a id="conf-menu" href="javascript:void(0);" style="text-decoration: none;display: none;">
                    <span style="font-size: xx-large;">⚙️</span>
                </a>
                <span style="font-size:xx-large;padding-bottom:0px;cursor:pointer;margin-right: 10px;background-color: antiquewhite;border-radius: 50%;">👨🏻‍💼</span>
                <img style="width:140px;height:35px;" id="logo-company"
                     src="/brand/logo_company.png"
                     onerror="this.src='https://placehold.co/300x100'" />
            </div>
        </div>
    </div>
    <div class="container">
        <div class="sub-container">
            <h2>User Management</h2>
            <button class="add-product-btn" onclick="toggleUserPopover()">
                + Create User
            </button>
        </div>
        <div id="product-table"></div>
    </div>

    <div id="popover" class="popover">
        <span class="close-icon" onclick="handleClose()">×</span>
        <p class="popover-title">User Details</p>
        <form>
            <div class="form-grid">
                <div class="input-group">
                    <input type="text" id="name" name="name" required>
                    <label for="name">Name</label>
                </div>
                <div class="input-group">
                    <input type="email" id="email" name="email" required>
                    <label for="email">Email</label>
                </div>
                <div class="input-group">
                    <input type="tel" id="phone" name="phone" required>
                    <label for="phone">Phone</label>
                </div>
                <div class="input-group">
                    <input type="text" id="location" name="location" required>
                    <label for="location">Location</label>
                </div>
                <div class="input-group">
                    <input type="text" id="client" name="client" required>
                    <label for="client">Client</label>
                </div>
            </div>

            <!-- Roles Multi-Select -->
            <div class="multi-select-container">
                <label for="roleInput">Roles</label>
                <div class="multi-select" onclick="toggleDropdown('rolesDropdown')">
                    <div class="selected-tags" id="rolesTags">
                        <input type="text" id="roleInput" onkeydown="handleInput(event, 'roles')"
                               placeholder="Type or select roles">
                    </div>
                    <div class="dropdown" id="rolesDropdown"></div>
                </div>
            </div>

            <div class="multi-select-container">
                <label for="claimInput">Claims</label>
                <div class="multi-select" onclick="toggleDropdown('claimsDropdown')">
                    <div class="selected-tags" id="claimsTags">
                        <input type="text" id="claimInput" onkeydown="handleInput(event, 'claims')"
                               placeholder="Type or select claims">
                    </div>
                    <div class="dropdown" id="claimsDropdown"></div>
                </div>
            </div>

            <div class="multi-select-container">
                <label for="scopeInput">Scopes</label>
                <div class="multi-select" onclick="toggleDropdown('scopesDropdown')">
                    <div class="selected-tags" id="scopesTags">
                        <input type="text" id="scopeInput" onkeydown="handleInput(event, 'scopes')"
                               placeholder="Type or select scopes">
                    </div>
                    <div class="dropdown" id="scopesDropdown"></div>
                </div>
            </div>

            <button type="submit" class="button">Submit</button>
        </form>
    </div>


    <script>
        const userData = [
            {
                name: "John Doe",
                userId: "#JD267400",
                email: "john.doe@example.com",
                location: "New York, USA",
                status: "Active"
            },
            {
                name: "Alice Smith",
                userId: "#AS651535",
                email: "alice.smith@example.com",
                location: "London, UK",
                status: "Active"
            },
            {
                name: "Michael Johnson",
                userId: "#MJ651535",
                email: "michael.johnson@example.com",
                location: "Toronto, Canada",
                status: "Inactive"
            },
            {
                name: "Emma Brown",
                userId: "#EB651535",
                email: "emma.brown@example.com",
                location: "Sydney, Australia",
                status: "On Leave"
            },
            {
                name: "Liam Wilson",
                userId: "#LW487441",
                email: "liam.wilson@example.com",
                location: "Berlin, Germany",
                status: "Suspended"
            },
            {
                name: "Sophia Davis",
                userId: "#SD449003",
                email: "sophia.davis@example.com",
                location: "Paris, France",
                status: "Active"
            },
            {
                name: "Ethan Martinez",
                userId: "#EM651535",
                email: "ethan.martinez@example.com",
                location: "Madrid, Spain",
                status: "Inactive"
            },
            {
                name: "Olivia Taylor",
                userId: "#OT449003",
                email: "olivia.taylor@example.com",
                location: "Tokyo, Japan",
                status: "On Leave"
            },
            {
                name: "Noah Anderson",
                userId: "#NA449003",
                email: "noah.anderson@example.com",
                location: "Los Angeles, USA",
                status: "Suspended"
            },
            {
                name: "Ava Thomas",
                userId: "#AT558612",
                email: "ava.thomas@example.com",
                location: "Milan, Italy",
                status: "Active"
            }
        ];


        const table = new Tabulator("#product-table", {
            data: userData,
            layout: "fitColumns",
            pagination: true,
            paginationSize: 10,
            columns: [
                {
                    title: "User Name",
                    field: "name",
                    formatter: function (cell) {
                        const value = cell.getValue();
                        return `
                            <div class="product-cell">
                                <img src="/api/placeholder/32/32" class="product-image">
                                ${value}
                            </div>
                        `;
                    }
                },
                { title: "User ID", field: "userId" },
                { title: "Email", field: "email" },
                { title: "Location", field: "location" },
                {
                    title: "Status",
                    field: "status",
                    formatter: function (cell) {
                        const status = cell.getValue();
                        const statusClass = `status-${status.toLowerCase().replace(' ', '-')}`;
                        return `<span class="status-pill ${statusClass}">${status}</span>`;
                    }
                },
                {
                    title: "Action",
                    field: "actions",
                    formatter: function () {
                        return '<button class="more-actions"><i class="fas fa-ellipsis-h"></i></button>';
                    },
                    width: 80,
                    hozAlign: "center"
                }
            ]
        });

        function toggleUserPopover() {
            var popover = document.getElementById("popover");
            var overlay = document.getElementById("overlay");

            if (popover.style.display === 'block') {
                popover.style.display = 'none';
                overlay.style.display = 'none';
            } else {
                popover.style.display = 'block';
                overlay.style.display = 'block';
                document.getElementById("name").focus(); // Focus on the first input field
            }
        }

        function handleSubmit(event) {

            event.preventDefault();
            var popover = document.getElementById("popover");
            var overlay = document.getElementById("overlay");
            var name = document.getElementById("name").value;
            var email = document.getElementById("email").value;
            var phone = document.getElementById("phone").value;
            console.log("User Details Submitted:", { name, email, phone });
            popover.style.display = 'none';
            overlay.style.display = 'none';
            handleClose();
        }

        function handleClose() {
            document.getElementById("name").value = "";
            document.getElementById("email").value = "";
            document.getElementById("phone").value = "";
            document.getElementById("location").value = "";
            document.getElementById("popover").style.display = "none";
            overlay.style.display = 'none';
        }

        const roles = ["Role1", "Role2", "Role3", "Role4", "Role5"];
        const claims = ["Claim1", "Claim2", "Claim3", "Claim4", "Claim5"];
        const scopes = ["Scope1", "Scope2", "Scope3", "Scope4", "Scope5"];

        let selectedRoles = [];
        let selectedClaims = [];
        let selectedScopes = [];

        const maxTags = 5;
        function generateDropdown(dropdownId, array, type) {
            const dropdown = document.getElementById(dropdownId);
            dropdown.innerHTML = ""; // Clear existing options

            array.forEach(item => {
                const div = document.createElement("div");
                div.textContent = item;
                div.onclick = () => selectTag(item, type);
                dropdown.appendChild(div);
            });
        }

        function toggleDropdown(dropdownId) {
            const dropdown = document.getElementById(dropdownId);
            dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";
        }

        function selectTag(tag, type) {
            let selectedArray = getSelectedArray(type);

            if (!selectedArray.includes(tag)) {
                selectedArray.push(tag);
                updateSelectedTags(type);
            }
        }

        function handleInput(event, type) {
            if (event.key === "Enter") {
                event.preventDefault();
                const inputField = document.getElementById(`${type}Input`);
                const newTag = inputField.value.trim();
                let selectedArray = getSelectedArray(type);

                if (newTag && !selectedArray.includes(newTag)) {
                    selectTag(newTag, type);
                }

                inputField.value = ""; // Clear input after adding
            }
        }

        function updateSelectedTags(type) {
            let selectedArray = getSelectedArray(type);
            const container = document.getElementById(`${type}Tags`);
            container.innerHTML = `<input type="text" id="${type}Input" onkeydown="handleInput(event, '${type}')" placeholder="Type or select ${type}">`;

            selectedArray.forEach(tag => {
                const tagElement = document.createElement("span");
                tagElement.classList.add("tag");
                tagElement.innerHTML = `${tag} <button onclick="removeTag('${tag}', '${type}')">×</button>`;
                container.appendChild(tagElement);
            });
        }

        function removeTag(tag, type) {
            let selectedArray = getSelectedArray(type);
            selectedArray = selectedArray.filter(t => t !== tag);
            setSelectedArray(type, selectedArray);
            updateSelectedTags(type);
        }

        function getSelectedArray(type) {
            return type === "roles" ? selectedRoles : type === "claims" ? selectedClaims : selectedScopes;
        }

        function setSelectedArray(type, array) {
            if (type === "roles") selectedRoles = array;
            if (type === "claims") selectedClaims = array;
            if (type === "scopes") selectedScopes = array;
        }

        // Handle form submission
        document.getElementById("popover").addEventListener("submit", function (event) {
            event.preventDefault();
            var popover = document.getElementById("popover");
            var overlay = document.getElementById("overlay");
            var name = document.getElementById("name").value;
            var email = document.getElementById("email").value;
            var phone = document.getElementById("phone").value;
            console.log("User Details Submitted:", { name, email, phone });
            popover.style.display = 'none';
            overlay.style.display = 'none';
            handleClose();
            const formData = {
                roles: selectedRoles,
                claims: selectedClaims,
                scopes: selectedScopes
            };

            console.log("Form Data Submitted:", formData);
        });

        // Initialize dropdowns on page load
        document.addEventListener("DOMContentLoaded", function () {
            generateDropdown("rolesDropdown", roles, "roles");
            generateDropdown("claimsDropdown", claims, "claims");
            generateDropdown("scopesDropdown", scopes, "scopes");
        });


    </script>
</body>

</html>